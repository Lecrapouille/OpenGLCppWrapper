#version 330

#define MAX_JOINTS 50
#define MAX_WEIGHTS 4

// ----------------------------------------------------------------------------
// Data from C++ program
// ----------------------------------------------------------------------------

in vec3 position;
in vec2 texCoord;
in vec3 normal;
in uvec4 jointIds;
in vec4 jointWeights;

uniform mat4 modelMatrix;
uniform mat4 viewMatrix;
uniform mat4 projectionMatrix;
uniform mat4 jointTransforms[MAX_JOINTS];

// ----------------------------------------------------------------------------
// Data to fragment program
// ----------------------------------------------------------------------------
out struct v2f_s
{
   vec2 texCoord;
   vec3 normal;
} v2f;

// ----------------------------------------------------------------------------
// Vertex program
// ----------------------------------------------------------------------------
void main()
{
    vec4 totalLocalPos = vec4(0.0);
    vec4 totalNormal = vec4(0.0);

    for (int i = 0; i < MAX_WEIGHTS; i++)
    {
        mat4 jointTransform = jointTransforms[jointIds[i]];

        vec4 posePosition = jointTransform * vec4(position, 1.0);
        totalLocalPos += posePosition * jointWeights[i];

        vec4 worldNormal = jointTransform * vec4(normal, 0.0);
        totalNormal += worldNormal * jointWeights[i];
    }

	mat4 modelViewProjection = projectionMatrix * viewMatrix * modelMatrix;
	gl_Position = modelViewProjection * totalLocalPos;

	v2f.texCoord = texCoord;
    v2f.normal = totalNormal.xyz;
}
